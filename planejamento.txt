ANOTAÇÕES/PLANEJAMENTO

- Tarefas:
   - Definir uma forma de representação de um paralelogramo.
   - Criar o repositório + documento com anotações e planejamento.

- Ideia central: transformar quadros.

- Comandos importantes:   

 - Funções primitivas
 
  - "transform-painter": recebe um painter e três vetores (origin, corner1 e corner2). Retorna um procedimento que, por sua vez, recebe um frame. 
  
   - Transformação de imagens:
     - "flip-vert": quadro de cabeça para baixo.
     - "flip-horiz": inverte o quadro horizontalmente (espelha).
     - "rotate-90"
     - "rotate-180"
     - "rotate-270"
     
   - Combinação de imagens:
     - "beside": coloca um quadro ao lado de outro.
     - "below": coloca um quadro embaixo de outro.
     - "painter": recebe um 'frame' e desenha uma determinada imagem redimensionada no 'frame' dado. 

 - 'Painters' primitivo:

     - "wave": um desenho particular, mostrado na figura 2.10 da seção.
     - "rogers": foto do fundador do MIT, William Barton Rogers.



 - Operações:
     - "flipped-pairs": recebe uma imagem e produz um quadro a partir dela, em que 
	   (i) o canto superior esquerdo é a própria imagem, com 1/4 do seu tamanho original;
	   (ii) o canto superior direito é a imagem de cabeça para baixo ('flip-vert'), também com 1/4 de seu tamanho original;
	   (iii) o canto inferior esquerdo é igual ao canto superior esquerdo;
	   (iv) o canto inferior direito é igual ao canto superior direito.
     - "right-split": recebe uma imagem e um número. A partir disso, realiza repetições da imagem em tamanhos reduzidos, sempre para a direita.
     - "up-split": recebe uma imagem e um número. A partir disso, realiza repetições da imagem em tamanhos reduzidos, sempre para cima.
     - "corner-split": recepe uma imagem e um número 'n'. Produz um quadro a partir da imagem, em que:
	   (i) canto superior esquerdo: beside de um 'up-split' com outro 'up-split', ambos da imagem passada;
	   (ii) canto superior direito: recursividade do "corner-split", recebendo a própria imagem e 'n' reduzido em uma unidade;
	   (iii) o canto inferior esquerdo é a própria imagem passada;
	   (iv) canto inferior direito: below de um 'right-split' com outro 'right-split', ambos da imagem passada.
     - "square-limit": recebe uma imagem e um número 'n'. Produz um quadro a partir dela, em que:
	   (i) canto superior esquerdo: 'flip-horiz' de 'corner-split' da imagem e de 'n';
	   (ii) canto superior direito: 'corner-split' da imagem e de 'n';
	   (iii) o canto inferior esquerdo é o 'flip-vert' do canto superior equerdo;
	   (iv) canto inferior direito: 'flip-vert' do canto superior direito.

 - Higher-order operations
     - "square-of-four: recebe quatro operações (tl, tr, bl, br) e devolve um procedimento que compõe um quadro com quatro imagens, uma em cada canto ocupando espaço equivalente. Tal procedimento recebe como argumento uma imagem ('painter') e produz um quadro em que:
	   (i) o canto superior esquerdo será a operação 'tl' aplicada ao painter;
	   (ii) o canto superior direito será a operação 'tr' aplicada ao painter;
	   (iii) o canto inferior esquerdo será a operação 'bl' aplicada ao painter;
	   (iv) o canto inferior direito será a operação 'br' aplicada ao painter.

     - "split": função genérica para as funções

 - Funções de transformações lineares:

     - "segments->painter": recebe uma lista de segmentos e retorna um procedimento. Tal procedimento recebe um frame e ajusta os segmentos (espécie de domínio da transformação) dentro do frame passado (imagem). 
     - "frame-coord-map": recebe um 'frame' e retorna um procedimento. Tal procedimento recebe um vetor e a sua saída será o vetor diagonal do frame.
     

- Exercícios feitos:
   - 2.44 
   - 2.45
   - 2.46
   - 2.47
   - 2.48
   - 2.49
   - 2.50
   - 2.51 (parte)
